# Generated by Django 2.1.15 on 2020-05-19 02:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Caracteristic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car0', models.FloatField(default=0, verbose_name='asymmetryByBestFitEllipse')),
                ('car1', models.FloatField(default=0, verbose_name='asymmetryByDistanceByCircle')),
                ('car2', models.FloatField(default=0, verbose_name='asymmetryIndex')),
                ('car3', models.FloatField(default=0, verbose_name='asymmetryBySubRegion')),
                ('car4', models.FloatField(default=0, verbose_name='asymmetryBySubRegionCentered')),
                ('car5', models.FloatField(default=0, verbose_name='asymmetryBySubRegionCentered2')),
                ('car6', models.FloatField(default=0, verbose_name='borderRoundness')),
                ('car7', models.FloatField(default=0, verbose_name='borderLength')),
                ('car8', models.FloatField(default=0, verbose_name='borderRegularityIndex')),
                ('car9', models.FloatField(default=0, verbose_name='borderRegularityIndexRatio')),
                ('car10', models.FloatField(default=0, verbose_name='borderCompactIndex')),
                ('car11', models.FloatField(default=0, verbose_name='borderHeywoodCircularityIndex')),
                ('car12', models.FloatField(default=0, verbose_name='borderHarrisCorner')),
                ('car13', models.FloatField(default=0, verbose_name='borderFractalDimension')),
                ('car14', models.FloatField(default=0, verbose_name='colorHSVIntervals')),
                ('car15', models.FloatField(default=0, verbose_name='colorYUVIntervals')),
                ('car16', models.FloatField(default=0, verbose_name='colorYCbCrIntervals')),
                ('car17', models.FloatField(default=0, verbose_name='colorSDG')),
                ('car18', models.FloatField(default=0, verbose_name='colorKurtosis')),
                ('car19', models.FloatField(default=0, verbose_name='diameterMinEnclosingCircle')),
                ('car20', models.FloatField(default=0, verbose_name='diameterOpenCircle')),
                ('car21', models.FloatField(default=0, verbose_name='diameterLengtheningIndex')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='computing date')),
            ],
        ),
        migrations.CreateModel(
            name='Details',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preprocess', models.ImageField(blank=True, null=True, upload_to='images')),
                ('segmentation', models.ImageField(blank=True, null=True, upload_to='images')),
                ('posttraitement', models.ImageField(blank=True, null=True, upload_to='images')),
                ('homologue', models.ImageField(blank=True, null=True, upload_to='images')),
                ('subregion', models.ImageField(blank=True, null=True, upload_to='images')),
                ('border', models.ImageField(blank=True, null=True, upload_to='images')),
                ('borderlength', models.ImageField(blank=True, null=True, upload_to='images')),
                ('enclosingCircle', models.ImageField(blank=True, null=True, upload_to='images')),
                ('openCircle', models.ImageField(blank=True, null=True, upload_to='images')),
                ('lengtheningIndex', models.ImageField(blank=True, null=True, upload_to='images')),
                ('kmeans', models.ImageField(blank=True, null=True, upload_to='images')),
                ('kmeans2', models.ImageField(blank=True, null=True, upload_to='images')),
                ('hsv', models.ImageField(blank=True, null=True, upload_to='images')),
                ('yuv', models.ImageField(blank=True, null=True, upload_to='images')),
                ('ycbcr', models.ImageField(blank=True, null=True, upload_to='images')),
                ('extract', models.ImageField(blank=True, null=True, upload_to='images')),
                ('contour', models.ImageField(blank=True, null=True, upload_to='images')),
                ('circle', models.ImageField(blank=True, null=True, upload_to='images')),
                ('rect', models.ImageField(blank=True, null=True, upload_to='images')),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='avatars')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Doctor',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('image', models.ImageField(default=None, upload_to='images')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='upload date')),
                ('result', models.IntegerField(default=1, verbose_name='result')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=254, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Note date')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='melanomaApp.Image')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(max_length=30)),
                ('lastName', models.CharField(max_length=30)),
                ('birthDate', models.DateTimeField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('sexe', models.CharField(default='male', max_length=30)),
                ('dateCreation', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
            ],
        ),
        migrations.AddField(
            model_name='image',
            name='patient',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='melanomaApp.Patient'),
        ),
        migrations.AddField(
            model_name='details',
            name='image',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='melanomaApp.Image'),
        ),
        migrations.AddField(
            model_name='caracteristic',
            name='image',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='melanomaApp.Image'),
        ),
    ]
